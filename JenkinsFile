pipeline {
  agent any

  environment {
    SONAR_HOST_URL = 'http://10.30.212.63:9000'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('SonarQube Analysis') {
      steps {
        script {
          // "qube" = Name del SonarQube Scanner en Manage Jenkins → Tools
          def scannerHome = tool name: 'qube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'

          // "server-sonar-pipeline" = Name del servidor en Manage Jenkins → System → SonarQube servers
          withSonarQubeEnv('server-sonar-pipeline') {
            sh """
              "${scannerHome}/bin/sonar-scanner" \
                -Dsonar.host.url=${SONAR_HOST_URL} \
                -Dsonar.projectKey=DVWA-escanner \
                -Dsonar.projectName=DVWA-Scan \
                -Dsonar.projectVersion=1.0 \
                -Dsonar.sources=. \
                -Dsonar.exclusions=**/node_modules/**,**/vendor/**,**/dist/**,**/build/**,**/*.min.js \
                -Dsonar.sourceEncoding=UTF-8
            """
          }
        }
      }
    }

    stage('Quality Gate') {
      steps {
        timeout(time: 10, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }
  }
}
